[tool.poetry]
name = "rasd"
version = "0.1.1"
description = "RASD Python AWS Lambda backend REST API using Poetry and FastAPI"
authors = ["Gaia Resources <dev@gaiaresources.com.au>"]
readme = "README.md"
packages = [
    { include = "rasd_fastapi", from = "lambdas" },
]

[tool.poetry.dependencies]
python = "~3.12"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.group.rasd_fastapi.dependencies]
fastapi = "^0.92.0"
mangum = "^0.17.0"
pydantic = {extras = ["dotenv", "email"], version = "^1.10.5"}
httpx = "^0.23.3"
fastapi-cloudauth = "^0.4.3"
python-multipart = "^0.0.6"
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
uvicorn = "^0.20.0"
poethepoet = "^0.18.1"
mypy = "^1.0.1"
ruff = "^0.0.247"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
covdefaults = "^2.2.2"
boto3 = "^1.26.76"
boto3-stubs = {extras = ["dynamodb", "cognito-idp", "sesv2"], version = "^1.26.76"}

[tool.poe.tasks]
serve = "uvicorn lambdas.rasd_fastapi.main:app --reload"
test = "pytest tests --cov=lambdas"
type = "mypy tests lambdas"
lint = "ruff tests lambdas"
clean = "rm -rf **/.ruff_cache **/.coverage **/.mypy_cache **/.pytest_cache **/__pycache__"

[tool.ruff]
target-version = "py39"
line-length = 120
select = [
    "F",    # flake8
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "D",    # flake8-docstrings
    "PT",   # flake8-pytest--style
    "Q",    # flake8-quotes
    "RUF",  # ruff
]
ignore = [
    "D401"  # imperative mood - overly restrictive
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # allow unused imports in `__init__.py`
"tests/*.py" = ["S101"]   # allow asserts in unit tests

[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
addopts = "--verbose"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s.%(msecs)03d [%(levelname)-8s] (%(name)-11s): %(message)s"
log_cli_date_format = "%Y%m%dT%H%M%S"

[tool.coverage.run]
plugins = ["covdefaults"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_unimported = true
warn_return_any = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true
plugins = ["pydantic.mypy"]
overrides = [{ module = "fastapi_cloudauth.*", ignore_missing_imports = true }]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
